# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# For the general syntax of property based configuration files see the
# documenation of org.apache.log4j.PropertyConfigurator.

# The root category uses the appender called A1. Since no priority is
# specified, the root category assumes the default priority for root
# which is DEBUG in log4j. The root category is the only category that
# has a default priority. All other categories need not be assigned a
# priority in which case they inherit their priority from the
# hierarchy.

#log4j.rootCategory=stdout

# A1 is set to be a LF5Appender which outputs to a swing
# logging console. 
  
#log4j.appender.A1=org.apache.log4j.lf5.LF5Appender
#log4j.appender.A1.MaxNumberOfRecords=1000

# Log4J Settings for log4j 1.2.x (via jakarta-commons-logging)
#
# The five logging levels used by Log are (in order):
#
#   1. DEBUG (the least serious)
#   2. INFO
#   3. WARN
#   4. ERROR
#   5. FATAL (the most serious)

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.stdout.layout.ConversionPattern=%d %5p (%c\:%L) - %m%n

# Set root logger level to WARN and append to stdout
log4j.rootLogger=ERROR, stdout

# Print only messages of level ERROR or above in the package noModule.
log4j.logger.noModule=FATAL

# Log4j para iseg package
log4j.logger.iseg=ERROR

# OpenSymphony Stuff
#log4j.logger.com=ERROR
#log4j.logger.org=ERROR
#log4j.logger.com.opensymphony.xwork2=DEBUG
#log4j.logger.org.apache.struts2=DEBUG
#log4j.logger.com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor=DEBUG
#log4j.logger.org.apache.struts2.convention.ConventionsServiceImpl=DEBUG 
#log4j.logger.org.apache.struts2.interceptor.TokenSessionStoreInterceptor=DEBUG 

# Spring Stuff
log4j.logger.org.springframework=ERROR
log4j.logger.org.springframework.transaction=ERROR

# Hibernate Stuff
log4j.logger.org.hibernate=FATAL
log4j.logger.org.hibernate.cfg=ERROR
log4j.logger.org.hibernate.hql=ERROR

